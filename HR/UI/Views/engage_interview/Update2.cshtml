@model Model.engage_resumeModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Update2</title>
    <link href="~/css/table.css" rel="stylesheet" />
    <link href="~/css/cwcalendar.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <script src="~/javascript/jquery-1.10.2.js"></script>
    <script src="~/DatePicker/WdatePicker.js"></script>
    <script src="~/javascript/comm/comm.js"></script>
    <script src="~/javascript/calendar-ch.js"></script>

    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="~/javascript/locate.js"></script>
    <script src="~/javascript/select.js"></script>
    <script src="~/javascript/vue.js"></script>
    <script type="text/javascript">
        $(function () {
            $("#qr").click(function () {
                var value = "";
                var radio = document.getElementsByName("ei.result");
                for (var i = 0; i < radio.length; i++) {
                    if (radio[i].checked == true) {
                        value = radio[i].value;
                        break;
                    }
                }
                alert(value);
            })
        })
    </script>
</head>
<body>
    @using (Ajax.BeginForm("Update2", new AjaxOptions() { HttpMethod = "Post" }))
    {

        <div id="div1">
            <table width="100%">
                <tr>
                    <td>
                        <font color="black">
                            您正在做的业务是：人力资源--招聘管理--面试管理--面试筛选
                        </font>

                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <input type="radio" name="ei.result" value="建议面试" >建议面试
                        <input type="radio" name="ei.result" value="建议笔试" >建议笔试
                        <input type="radio" name="ei.result" value="建议录用" checked="checked" >建议录用
                        <input type="radio" name="ei.result" value="删除简历" >删除简历
                        <input type="button" value="确认" class="BUTTON_STYLE1" id="qr">
                        <input type="button" value="返回" class="BUTTON_STYLE1"
                               onclick="history.back();">

                    </td>
                </tr>
            </table>
            <table width="100%" border="1" cellpadding=0 cellspacing=1
                   bordercolorlight=#848284 bordercolordark=#eeeeee
                   class="TABLE_STYLE1">
                <tr>
                    <td class="TD_STYLE1">
                        职位分类
                    </td>
                    <td style="display:none">
                        @Html.EditorFor(model => model.register, new { htmlAttributes = new { @class = "INPUT_STYLE1", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.register, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.human_major_id, new { htmlAttributes = new { @class = "INPUT_STYLE1", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.human_major_id, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.human_major_kind_id, new { htmlAttributes = new { @class = "INPUT_STYLE1", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.human_major_kind_id, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE2">
                        @Html.DropDownList("human_major_kind_id", ViewData["yj"] as IEnumerable<SelectListItem>)
                        @Html.ValidationMessageFor(model => model.human_major_kind_name, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        职位名称
                    </td>
                    <td class="TD_STYLE2">
                        @Html.DropDownList("human_major_id", ViewData["jj"] as IEnumerable<SelectListItem>)
                        @Html.ValidationMessageFor(model => model.human_major_name, "", new { @class = "text-danger" })
                    </td>
                    <td width="11%" class="TD_STYLE1">
                        招聘类型
                    </td>
                    <td class="TD_STYLE2" colspan="2">
                        @Html.DropDownList("engage_type", ViewData["ej"] as IEnumerable<SelectListItem>)
                        @Html.ValidationMessageFor(model => model.engage_type, "", new { @class = "text-danger" })
                    </td>
                    <td rowspan="6">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td style="display:none">
                        @Html.EditorFor(model => model.human_major_kind_name, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_major_kind_name, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.human_major_name, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_major_name, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        姓名
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_name, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_name, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        性别
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_sex, new { htmlAttributes = new { @class = "INPUT_STYLE2", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.human_sex, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        EMAIL
                    </td>
                    <td colspan="2" class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_email, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_email, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        电话
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_telephone, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_telephone, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        家庭电话
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_homephone, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_homephone, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        手机
                    </td>
                    <td colspan="2" class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_mobilephone, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_mobilephone, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        住址
                    </td>
                    <td colspan="3" class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_address, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_address, "", new { @class = "text-danger" })
                    </td>

                    <td class="TD_STYLE1">
                        邮编
                    </td>
                    <td colspan="2" class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_postcode, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_postcode, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr>
                    <td class="TD_STYLE1">
                        国籍
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_nationality, new { htmlAttributes = new { @class = "INPUT_STYLE2", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.human_nationality, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        出生地
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_birthplace, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_birthplace, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        生日
                    </td>
                    <td width="13%" colspan="2" class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_birthday, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_birthday, "", new { @class = "text-danger" })
                    </td>

                </tr>
                <tr>
                    <td width="11%" class="TD_STYLE1">
                        民族
                    </td>
                    <td class="TD_STYLE2" width="14%">
                        @Html.EditorFor(model => model.human_race, new { htmlAttributes = new { @class = "INPUT_STYLE2", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.human_race, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        宗教信仰
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_religion, new { htmlAttributes = new { @class = "INPUT_STYLE2", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.human_religion, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        政治面貌
                    </td>
                    <td class="TD_STYLE2" colspan="2">
                        @Html.EditorFor(model => model.human_party, new { htmlAttributes = new { @class = "INPUT_STYLE2", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.human_party, "", new { @class = "text-danger" })
                    </td>


                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        身份证号码
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_idcard, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_idcard, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        年龄
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_age, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_age, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        毕业院校
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_college, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_college, "", new { @class = "text-danger" })
                    </td>

                    <td class="TD_STYLE1">
                        学历
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_educated_degree, new { htmlAttributes = new { @class = "INPUT_STYLE2", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.human_educated_degree, "", new { @class = "text-danger" })
                    </td>

                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        教育年限
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_educated_years, new { htmlAttributes = new { @class = "INPUT_STYLE2", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.human_educated_years, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        学历专业
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_educated_major, new { htmlAttributes = new { @class = "INPUT_STYLE2", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.human_educated_major, "", new { @class = "text-danger" })
                    </td>

                    <td class="TD_STYLE1">
                        薪酬要求
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.demand_salary_standard, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.demand_salary_standard, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        注册时间
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.regist_time, new { htmlAttributes = new { @class = "INPUT_STYLE2", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.regist_time, "", new { @class = "text-danger" })
                    </td>

                </tr>
                <tr>

                    <td class="TD_STYLE1">
                        特长
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_specility, new { htmlAttributes = new { @class = "INPUT_STYLE2", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.human_specility, "", new { @class = "text-danger" })

                    </td>
                    <td class="TD_STYLE1">
                        爱好
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_hobby, new { htmlAttributes = new { @class = "INPUT_STYLE2", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.human_hobby, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        推荐人
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.checker, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.checker, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        推荐时间
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.check_time, new { htmlAttributes = new { @class = "INPUT_STYLE2", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.check_time, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        个人履历
                    </td>
                    <td colspan="7" class="TD_STYLE2">
                        @Html.TextAreaFor(model => model.human_history_records, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                        @Html.ValidationMessageFor(model => model.human_history_records, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr>
                    <td class="TD_STYLE1">
                        备注
                    </td>
                    <td colspan="7" class="TD_STYLE2">
                        @Html.TextAreaFor(model => model.remark, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                        @Html.ValidationMessageFor(model => model.remark, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        筛选推荐意见
                    </td>
                    <td colspan="7" class="TD_STYLE2">
                        @Html.TextAreaFor(model => model.recomandation, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                        @Html.ValidationMessageFor(model => model.recomandation, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr  v-for="(item,i) in dt">
                    <td class="TD_STYLE1">
                        面试次数
                    </td>
                    <td class="TD_STYLE2" id="ms">
                        <input name="interview_amount" v-model="item.interview_amount"  class = "INPUT_STYLE2" readonly = "readonly">
                    </td>
                    <td class="TD_STYLE1">
                        形象评价
                    </td>
                    <td class="TD_STYLE2">
                        <input name="interview_amount" v-model="item.image_degree"   class = "INPUT_STYLE2" readonly = "readonly">
                    </td>
                    <td class="TD_STYLE1">
                        口才评价
                    </td>
                    <td class="TD_STYLE2">
                        <input name="interview_amount" v-model="item.native_language_degree" class="INPUT_STYLE2" readonly="readonly">
                    </td>
                    <td class="TD_STYLE1">
                        外语口语能力
                    </td>
                    <td class="TD_STYLE1">
                        <input name="interview_amount" v-model="item.foreign_language_degree" class="INPUT_STYLE2" readonly="readonly">
                    </td>
                </tr>
                <tr v-for="(item,i) in dt">
                    <td class="TD_STYLE1">
                        应变能力
                    </td>
                    <td class="TD_STYLE2">
                        <input name="interview_amount" v-model="item.response_speed_degree" class="INPUT_STYLE2" readonly="readonly">
                    </td>
                    <td class="TD_STYLE1">
                        EQ
                    </td>
                    <td class="TD_STYLE2">
                        <input name="interview_amount" v-model="item.EQ_degree" class="INPUT_STYLE2" readonly="readonly">
                    </td>
                    <td class="TD_STYLE1">
                        IQ
                    </td>
                    <td class="TD_STYLE2">
                        <input name="interview_amount" v-model="item.IQ_degree" class="INPUT_STYLE2" readonly="readonly">
                    </td>
                    <td class="TD_STYLE1">
                        综合素质
                    </td>
                    <td class="TD_STYLE1">
                        <input name="interview_amount" v-model="item.multi_quality_degree" class="INPUT_STYLE2" readonly="readonly">
                    </td>
                </tr>
                <tr v-for="(item,i) in dt">
                    <td class="TD_STYLE1">
                        面试人
                    </td>
                    <td class="TD_STYLE2">
                        <input name="interview_amount" v-model="item.register" class="INPUT_STYLE2" readonly="readonly">
                    </td>
                    <td class="TD_STYLE1">
                        面试时间
                    </td>
                    <td class="TD_STYLE2">
                        <input name="interview_amount" v-model="item.registe_time" class="INPUT_STYLE2" readonly="readonly">
                    </td>
                    <td class="TD_STYLE1">
                        筛选人
                    </td>
                    <td class="TD_STYLE2">
                        <input name="interview_amount" v-model="item.checker" class="INPUT_STYLE2" >
                    </td>
                    <td class="TD_STYLE1">
                        筛选时间
                    </td>
                    <td class="TD_STYLE2">
                        <input type="text" name="engageInterview.checkTime"
                               id="nowTime" readonly="readonly"
                               class="INPUT_STYLE2">
                    </td>
                </tr>
                <tr v-for="(item,i) in dt">
                    <td class="TD_STYLE1">
                        录用申请审核意见
                    </td>
                    <td class="TD_STYLE2" colspan="7">
                        <textarea name="interview_amount" v-model="item.interview_comment" class="INPUT_STYLE2" readonly="readonly" style="height:74px"></textarea>
                    </td>
                </tr>
            </table>
        </div>
    }
    <script type="text/javascript">
        window.onload = check;
        function tick() {
            var now = new Date();
            var hours, minutes, seconds, noon;
            var intHours, intMinutes, intSeconds;
            intHours = now.getHours();
            intMinutes = now.getMinutes();
            intSeconds = now.getSeconds();
            if (intHours < 24) {
                hours = intHours + ":";
                noon = "A.M.";
            } else {
                intHours = intHours - 24;
                hours = intHours + ":";
                noon = "P.M.";
            }
            if (intMinutes < 10) {
                minutes = "0" + intMinutes + ":";
            } else {
                minutes = intMinutes + ":";
            }
            if (intSeconds < 10) {
                seconds = "0" + intSeconds + " ";
            } else {
                seconds = intSeconds + " ";
            }
            timeString = hours + minutes + seconds;
            var now = new Date();

            document.getElementById("nowTime").value = now.getFullYear() + "-" + (now.getMonth() + 1) + "-" + now.getDate() + " " + timeString;
            window.setTimeout("tick();", 100);
        }

        //load事件
        function check() {
            //获得系统当前时间的方法
            tick();
        }

       
        var vm = new Vue({
            el: "#div1",
            data: {
                dt: null,
            },
            methods: {
                load: function () {
                    var t = this;
                    $.ajax({
                        url: "/engage_interview/Index6",
                        type: "post",
                        data: "",
                        success: function (msg) {
                            var dd = eval("(" + msg + ")");
                            t.dt = dd;
                        }
                    });
                },

            },
            created: function () {
                this.load();
            }
        });
    </script>
</body>
</html>
